<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader><resheader name="version">2.0</resheader><resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader><resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader><data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data><data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data><data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64"><value>[base64 mime encoded serialized .NET Framework object]</value></data><data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64"><value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value><comment>This is a comment</comment></data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Eight" xml:space="preserve">
    <value>エイト</value>
    <comment>NEW: Eight</comment>
  </data>
  <data name="Five" xml:space="preserve">
    <value>ファイブ</value>
    <comment>NEW: Five</comment>
  </data>
  <data name="Four" xml:space="preserve">
    <value>4人</value>
    <comment>NEW: Four</comment>
  </data>
  <data name="MyBool" xml:space="preserve">
    <value>マイ・ブール</value>
    <comment>NEW: My Bool</comment>
  </data>
  <data name="MyChar" xml:space="preserve">
    <value>マイ・シャア</value>
    <comment>NEW: My Char</comment>
  </data>
  <data name="MyDate" xml:space="preserve">
    <value>マイデート</value>
    <comment>NEW: My Date</comment>
  </data>
  <data name="MyDateTime" xml:space="preserve">
    <value>自分の日付時刻</value>
    <comment>NEW: My Date Time</comment>
  </data>
  <data name="MyDateTimeOffset" xml:space="preserve">
    <value>自分の日付時刻のオフセット</value>
    <comment>NEW: My Date Time Offset</comment>
  </data>
  <data name="MyDecimal" xml:space="preserve">
    <value>マイ・デシマル</value>
    <comment>NEW: My Decimal</comment>
  </data>
  <data name="MyDouble" xml:space="preserve">
    <value>マイダブル</value>
    <comment>NEW: My Double</comment>
  </data>
  <data name="MyEnum" xml:space="preserve">
    <value>マイ・エヌマ</value>
    <comment>NEW: My Enum</comment>
  </data>
  <data name="MyGuid" xml:space="preserve">
    <value>マイガイド</value>
    <comment>NEW: My Guid</comment>
  </data>
  <data name="MyInt" xml:space="preserve">
    <value>私のInt</value>
    <comment>NEW: My Int</comment>
  </data>
  <data name="MyString" xml:space="preserve">
    <value>私の文字列</value>
    <comment>NEW: My String</comment>
  </data>
  <data name="MyTime" xml:space="preserve">
    <value>マイタイム</value>
    <comment>NEW: My Time</comment>
  </data>
  <data name="MyTimeSpan" xml:space="preserve">
    <value>マイ タイム スパン</value>
    <comment>NEW: My Time Span</comment>
  </data>
  <data name="MyVersion" xml:space="preserve">
    <value>マイバージョン</value>
    <comment>NEW: My Version</comment>
  </data>
  <data name="Nine" xml:space="preserve">
    <value>ナイン</value>
    <comment>NEW: Nine</comment>
  </data>
  <data name="NumEight" xml:space="preserve">
    <value>ナンバーエイト</value>
    <comment>NEW: Number Eight</comment>
  </data>
  <data name="NumFive" xml:space="preserve">
    <value>ナンバーファイブ</value>
    <comment>NEW: Number Five</comment>
  </data>
  <data name="NumFour" xml:space="preserve">
    <value>ナンバー4</value>
    <comment>NEW: Number Four</comment>
  </data>
  <data name="NumNine" xml:space="preserve">
    <value>ナンバーナイン</value>
    <comment>NEW: Number Nine</comment>
  </data>
  <data name="NumOne" xml:space="preserve">
    <value>ナンバーワン</value>
    <comment>NEW: Number One</comment>
  </data>
  <data name="NumSeven" xml:space="preserve">
    <value>ナンバーセブン</value>
    <comment>NEW: Number Seven</comment>
  </data>
  <data name="NumSix" xml:space="preserve">
    <value>ナンバーシックス</value>
    <comment>NEW: Number Six</comment>
  </data>
  <data name="NumTen" xml:space="preserve">
    <value>ナンバーテン</value>
    <comment>NEW: Number Ten</comment>
  </data>
  <data name="NumThree" xml:space="preserve">
    <value>ナンバー3</value>
    <comment>NEW: Number Three</comment>
  </data>
  <data name="NumTwo" xml:space="preserve">
    <value>ナンバー2</value>
    <comment>NEW: Number Two</comment>
  </data>
  <data name="NumZero" xml:space="preserve">
    <value>ゼロの数</value>
    <comment>NEW: Number Zero</comment>
  </data>
  <data name="One" xml:space="preserve">
    <value>1 つ</value>
    <comment>NEW: One</comment>
  </data>
  <data name="Seven" xml:space="preserve">
    <value>セブン</value>
    <comment>NEW: Seven</comment>
  </data>
  <data name="Six" xml:space="preserve">
    <value>シックス</value>
    <comment>NEW: Six</comment>
  </data>
  <data name="Ten" xml:space="preserve">
    <value>10</value>
    <comment>NEW: Ten</comment>
  </data>
  <data name="TestDataModel" xml:space="preserve">
    <value>テスト データ モデル</value>
    <comment>NEW: Test Data Model</comment>
  </data>
  <data name="Three" xml:space="preserve">
    <value>3</value>
    <comment>NEW: Three</comment>
  </data>
  <data name="Two" xml:space="preserve">
    <value>2</value>
    <comment>NEW: Two</comment>
  </data>
  <data name="YourChar" xml:space="preserve">
    <value>あなたのシャア</value>
    <comment>NEW: Your Char</comment>
  </data>
  <data name="YourDate" xml:space="preserve">
    <value>あなたの日付</value>
    <comment>NEW: Your Date</comment>
  </data>
  <data name="YourDecimal" xml:space="preserve">
    <value>あなたの小数</value>
    <comment>NEW: Your Decimal</comment>
  </data>
  <data name="YourDouble" xml:space="preserve">
    <value>あなたのダブル</value>
    <comment>NEW: Your Double</comment>
  </data>
  <data name="YourTime" xml:space="preserve">
    <value>あなたの時間</value>
    <comment>NEW: Your Time</comment>
  </data>
  <data name="Zero" xml:space="preserve">
    <value>ゼロ</value>
    <comment>NEW: Zero</comment>
  </data>
</root>